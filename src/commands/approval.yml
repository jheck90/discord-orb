description: Send a notification that a manual approval job is ready

parameters:
  webhook:
    description: Enter either your Webhook value or use the CircleCI UI to add your token under the 'DISCORD_WEBHOOK' env var
    type: string
    default: ${DISCORD_WEBHOOK}

  message:
    description: Enter custom message.
    type: string
    default: A workflow in CircleCI is awaiting your approval.

  color:
    description: Decimal color value for notification attachment color.
    type: string
    default: "3843043"

  mentions:
    description: "A comma separated list of user IDs, role IDs prepended with `&`. No spaces. E.g: 'USERID1,USERID2,&ROLE_ID1,here,everyone'"
    type: string
    default: ""

  include_project_field:
    type: boolean
    default: true
    description: >
      Whether or not to include the Project field in the message

  include_job_number_field:
    type: boolean
    default: true
    description: >
      Whether or not to include the Job Number field in the message

  url:
    description: The URL to link back to.
    type: string
    default: https://circleci.com/workflow-run/${CIRCLE_WORKFLOW_ID}

steps:
  - run:
      name: Provide error if non-bash shell
      command: |
        if [ ! -x /bin/bash ]; then
          echo Bash not installed.
          exit 1
        fi

  - run:
      name: Provide error if cURL is not installed.
      command: |
        which curl > curl_exists; echo $? | grep -q '1' && echo curl not installed && rm curl_exists && exit 1
        rm curl_exists

  - run:
      name: Discord - Sending Approval Notification
      shell: /bin/bash
      command: |
        # Provide error if no webhook is set and error. Otherwise continue
        if [ -z "<< parameters.webhook >>" ]; then
          echo "NO DISCORD WEBHOOK SET"
          echo "Please input your DISCORD_WEBHOOK value either in the settings for this project, or as a parameter for this orb."
          exit 1
        else
          #Create Members string
          if [ -n "<< parameters.mentions >>" ]; then
            IFS="," read -ra DISCORD_MEMBERS \<<< "<< parameters.mentions >>"
            for i in "${DISCORD_MEMBERS[@]}"; do
              if echo ${i} | grep -E "^(here|everyone)$" > /dev/null; then
                DISCORD_MENTIONS="${DISCORD_MENTIONS}@${i} "
              else
                DISCORD_MENTIONS="${DISCORD_MENTIONS}<@${i}> "
              fi
            done
          fi

          curl -X POST -H 'Content-type: application/json' \
            --data \
              "{ \
                \"content\": \"<< parameters.message >> $DISCORD_MENTIONS\", \
                \"embeds\": [{ \
                  \"description\": \"<< parameters.message >> - << parameters.url >>\", \
                  \"color\": \"<< parameters.color >>\", \
                  \"fields\": [ \
                    <<# parameters.include_project_field >>
                    { \
                      \"name\": \"Project\", \
                      \"value\": \"$CIRCLE_PROJECT_REPONAME\", \
                      \"inline\": true \
                    }<<# parameters.include_job_number_field >>,<</ parameters.include_job_number_field >> \
                    <</ parameters.include_project_field >>
                    <<# parameters.include_job_number_field >>
                    { \
                      \"name\": \"Job Number\", \
                      \"value\": \"$CIRCLE_BUILD_NUM\", \
                      \"inline\": true \
                    } \
                    <</ parameters.include_job_number_field >>
                  ] \
                }] \
              }" << parameters.webhook >>
          echo "Awaiting approval notified."
        fi
