description: >
  Send a status alert at the end of a job based on success or failure.
  Must be the last step in a job.

parameters:
  webhook:
    type: string
    default: ${DISCORD_WEBHOOK}
    description: >
      Enter either your Webhook value or use the CircleCI UI to add your
      token under the 'DISCORD_WEBHOOK' env var

  success_message:
    type: string
    default: ":tada: A $CIRCLE_JOB job has succeeded!"
    description: Enter custom message.

  failure_message:
    type: string
    default: ":red_circle: A $CIRCLE_JOB job has failed!"
    description: Enter custom message.

  success_only:
    type: boolean
    default: false
    description: >
      If `true`, notifications of failed jobs will not be sent.

  fail_only:
    type: boolean
    default: false
    description: >
      If `true`, notifications of successful jobs will not be sent.

  success_mentions:
    type: string
    default: ""
    description: "A comma separated list of user IDs, role IDs prepended with `&`. No spaces. E.g: 'USERID1,USERID2,&ROLE_ID1,here,everyone'"

  failure_mentions:
    type: string
    default: ""
    description: "A comma separated list of user IDs, role IDs prepended with `&`. No spaces. E.g: 'USERID1,USERID2,&ROLE_ID1,here,everyone'"

  only_for_branches:
    type: string
    default: ""
    description: >
      If set, a comma-separated list of branches for which to send
      notifications. No spaces.

steps:
  - run:
      name: Provide error if curl is not installed.
      command: |
        which curl > curl_exists; echo $? | grep -q '1' && echo curl not installed && rm curl_exists && exit 1
        rm curl_exists

  - run:
      name: Discord - Setting Failure Condition
      command: |
        echo 'export DISCORD_BUILD_STATUS="fail"' >> $BASH_ENV
      when: on_fail

  - run:
      name: Discord - Setting Success Condition
      command: |
        echo 'export DISCORD_BUILD_STATUS="success"' >> $BASH_ENV
      when: on_success

  - run:
      name: Provide error if non-bash shell
      command: |
        if [ ! -x /bin/bash ]; then
          echo Bash not installed.
          exit 1
        fi

  - run:
      name: Discord - Sending Status Alert
      shell: /bin/bash
      when: always
      command: |
        current_branch_in_filter=false

        IFS="," read -ra BRANCH_FILTERS \<<< "<< parameters.only_for_branches >>"

        for i in "${BRANCH_FILTERS[@]}"; do
          if [ "${i}" == "${CIRCLE_BRANCH}" ]; then
            current_branch_in_filter=true
          fi
        done

        if [ "x" == "x<< parameters.only_for_branches>>" ] || [ "$current_branch_in_filter" = true ]; then
          # Provide error if no webhook is set and error. Otherwise continue
          if [ -z "<< parameters.webhook >>" ]; then
            echo "NO DISCORD WEBHOOK SET"
            echo "Please input your DISCORD_WEBHOOK value either in the settings for this project, or as a parameter for this orb."
            exit 1
          else
            #If successful
            if [ "$DISCORD_BUILD_STATUS" = "success" ]; then
              #Skip if fail_only
              if [ << parameters.fail_only >> = true ]; then
                echo "The job completed successfully"
                echo '"fail_only" is set to "true". No Discord notification sent.'
              else
                #Create Members string
                if [ -n "<< parameters.success_mentions >>" ]; then
                  IFS="," read -ra DISCORD_MEMBERS \<<< "<< parameters.success_mentions >>"
                  DISCORD_MENTIONS=""
                  for i in "${DISCORD_MEMBERS[@]}"; do
                    if echo ${i} | grep -E "^(here|everyone)$" > /dev/null; then
                      DISCORD_MENTIONS="${DISCORD_MENTIONS}@${i} "
                    else
                      DISCORD_MENTIONS="${DISCORD_MENTIONS}<@${i}> "
                    fi
                  done
                fi
                curl -X POST -H 'Content-type: application/json' \
                  --data \
                    "{ \
                      \"content\": \"<< parameters.success_message >> $DISCORD_MENTIONS\", \
                      \"embeds\": [{ \
                        \"description\": \"<< parameters.success_message >> $CIRCLE_BUILD_URL\", \
                        \"color\": \"1883971\", \
                        \"fields\": [ \
                          { \
                            \"name\": \"Project\", \
                            \"value\": \"$CIRCLE_PROJECT_REPONAME\", \
                            \"inline\": true \
                          }, \
                          { \
                            \"name\": \"Job Number\", \
                            \"value\": \"$CIRCLE_BUILD_NUM\", \
                            \"inline\": true \
                          } \
                        ] \
                      }] \
                    }" << parameters.webhook >>
                echo "Job completed successfully. Alert sent."
              fi
            else
              #If Failed

              #Skip if success_only
              if [ << parameters.success_only >> = true ]; then
                echo "The job failed"
                echo '"success_only" is set to "true". No Discord notification sent.'
              else
                if [ -n "<< parameters.failure_mentions >>" ]; then
                  IFS="," read -ra DISCORD_MEMBERS \<<< "<< parameters.failure_mentions >>"
                  DISCORD_MENTIONS=""
                  for i in "${DISCORD_MEMBERS[@]}"; do
                    if echo ${i} | grep -E "^(here|everyone)$" > /dev/null; then
                      DISCORD_MENTIONS="${DISCORD_MENTIONS}@${i} "
                    else
                      DISCORD_MENTIONS="${DISCORD_MENTIONS}<@${i}> "
                    fi
                  done
                fi
                curl -X POST -H 'Content-type: application/json' \
                  --data \
                    "{ \
                      \"content\": \"<< parameters.failure_message >> $DISCORD_MENTIONS\", \
                      \"embeds\": [{ \
                        \"description\": \"<< parameters.failure_message >> $CIRCLE_BUILD_URL\", \
                        \"color\": \"15555676\", \
                        \"fields\": [ \
                          { \
                            \"name\": \"Project\", \
                            \"value\": \"$CIRCLE_PROJECT_REPONAME\", \
                            \"inline\": true \
                          }, \
                          { \
                            \"name\": \"Job Number\", \
                            \"value\": \"$CIRCLE_BUILD_NUM\", \
                            \"inline\": true \
                          } \
                        ] \
                      }] \
                    }" << parameters.webhook >>
                echo "Job failed. Alert sent."
              fi
            fi
          fi
        else
          echo "Current branch is not included in only_for_branches filter; no status alert will be sent"
        fi
