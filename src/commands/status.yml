description: >
  Send a status alert at the end of a job based on success or failure.
  Must be the last step in a job.

parameters:
  webhook:
    type: string
    default: ${DISCORD_WEBHOOK}
    description: >
      Enter either your Webhook value or use the CircleCI UI to add your
      token under the 'DISCORD_WEBHOOK' env var

  success_message:
    type: string
    default: ":tada: A $CIRCLE_JOB job has succeeded!"
    description: Enter custom message.

  failure_message:
    type: string
    default: ":red_circle: A $CIRCLE_JOB job has failed!"
    description: Enter custom message.

  success_only:
    type: boolean
    default: false
    description: >
      If `true`, notifications of failed jobs will not be sent.

  fail_only:
    type: boolean
    default: false
    description: >
      If `true`, notifications of successful jobs will not be sent.

  success_mentions:
    type: string
    default: ""
    description: "A comma separated list of user IDs, role IDs prepended with `&`. No spaces. E.g: 'USERID1,USERID2,&ROLE_ID1,here,everyone'"

  failure_mentions:
    type: string
    default: ""
    description: "A comma separated list of user IDs, role IDs prepended with `&`. No spaces. E.g: 'USERID1,USERID2,&ROLE_ID1,here,everyone'"

  only_for_branches:
    type: string
    default: ""
    description: >
      If set, a comma-separated list of branches for which to send
      notifications. No spaces.

steps:
  - run:
      name: Provide error if cURL is not installed.
      command: <<include(scripts/verify_curl.sh)>>

  - run:
      name: Discord - Setting Failure Condition
      command: |
        echo 'export DISCORD_BUILD_STATUS="fail"' >> $BASH_ENV
      when: on_fail

  - run:
      name: Discord - Setting Success Condition
      command: |
        echo 'export DISCORD_BUILD_STATUS="success"' >> $BASH_ENV
      when: on_success

  - run:
      name: Provide error if non-bash shell
      command: <<include(scripts/verify_bash.sh)>>

  - run:
    name: Discord - Sending Status Alert
    when: always
    command: <<include(scripts/status_message.sh)>>
    environment:
      WEBHOOK: <<parameters.webhook>>
      ONLY_FOR_BRANCHES: <<parameters.only_for_branches>>
      DISCORD_BUILD_STATUS: <<parameters.discord_build_status>>
      FAIL_ONLY: <<parameters.fail_only>>
      SUCCESS_MENTIONS: <<parameters.success_mentions>>
      SUCCESS_MESSAGE: <<parameters.success_message>>
      CIRCLE_BUILD_URL: <<parameters.circle_build_url>>
      CIRCLE_PROJECT_REPONAME: <<parameters.circle_project_reponame>>
      CIRCLE_BUILD_NUM: <<parameters.circle_build_num>>
      SUCCESS_ONLY: <<parameters.success_only>>
      FAILURE_MENTIONS: <<parameters.failure_mentions>>
      FAILURE_MESSAGE: <<parameters.failure_message>>
